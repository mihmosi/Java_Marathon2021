package day7;
/*

2. Дворовый футбол.
Для игры в футбол во дворе требуется 6 человек (3х3). Класс Игрок (англ. Player) содержит следующие поля:
Поле “выносливость” (англ. stamina), разное для каждого экземпляра, инициализируется через конструктор.
Константы “максимальная выносливость” (англ. MAX_STAMINA) со значением 100 и “минимальная выносливость”
(англ. MIN_STAMINA) со значением 0, единые для всех экземпляров.
Статическое поле countPlayers, которое считает количество игроков на футбольном поле (изначально их 0,
выходом на поле считается создание экземпляра класса, уходом - когда игрок устал).
Геттеры для полей “выносливость” и “количество игроков”.

и следующие методы:
run() - игрок бежит при вызове этого метода. Этот метод уменьшает выносливость игрока на 1 при однократном вызове.
Когда выносливость достигает 0, игроку нужен отдых и он уходит с поля.
info() -  выводит сообщение в зависимости от количества игроков на поле. Если игроков меньше 6, то выводит
сообщение: “Команды неполные. На поле еще есть ... свободных мест”, иначе: “На поле нет свободных мест”.
Грамматикой русского языка пренебречь, т.е. фраза “еще есть 1 свободных мест” допустима.

Задание: Создать класс Player по вышеописанному шаблону. В методе main() создать объект класса Random,
который будет генерировать случайные числа. Создать 6 игроков, передавая им в качестве аргумента в конструктор
случайно сгенерированные числа от 90 до 100. Вызвать метод info(). При попытке создать 7,8 … n игрока,
количество игроков на поле меняться не должно, проверить это.
Примените к одному игроку метод run(), пока он полностью не выдохнется
(отрицательное значение выносливости не допускается). Вывести количество игроков на поле.

*По желанию: доработать метод info() так, чтобы при выводе в консоль грамматика русского языка учитывалась.
 */

public class Player {
    private int stamina;
    private final int MAX_STAMINA = 100;
    private final int MIN_STAMINA = 0;
    private static int countPlayers = 0;

    public int getStamina() {
        return stamina;
    }

    public static int getCountPlayers() {
        return countPlayers;
    }

    public Player(int stamina) {
        this.stamina = stamina;
        countPlayers++;
        if (countPlayers > 6) {
            countPlayers -= 1;
        }
    }

    public void run() {
        if (stamina <= 0) {
            System.out.println("the player is tired. it's time to have a rest");
            countPlayers -= 1;
        }
        stamina -= 1;
        //     System.out.println(stamina);
    }

    public void info() {
        if (countPlayers < 6) {
            System.out.println("The team is not complete. there are(is) " + (6 - countPlayers) + " free places");
        } else {
            System.out.println("no free places on the field");
        }
        System.out.println(countPlayers + " players on the field");

    }
}
